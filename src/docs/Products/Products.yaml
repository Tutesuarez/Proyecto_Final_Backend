paths:
    /api/products:
        get:
            summary: Gets all products
            tags:
                - Products
            responses:
                "200":
                    description: The products from the database were obtained successfully.
                    content:
                        application/json:
                            schema:
                                type: Array
                                items:
                                    $ref: '#/components/schemas/Product'
                "401":
                    description: Unauthorized user.
                "500":
                    description: Iternal server error, data could not be obtained.
        post:
            summary: Insert a new product at the database.
            tags:
                - Products
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            items:
                                $ref: '#/components/schemas/Product'
            responses:
                "200":
                    description: The product was successfully added to the database.
                "401":
                    description: Unauthorized user.
                "403":
                    description: You do not have permissions to perform the action.
                "500":
                    description: Iternal server error, products could not be obtained.

    /api/products/{pid}:
        get:
            summary: Get a product by its ID.
            tags:
                - Products
            parameters:
                -   name: pid
                    in: path
                    required: true
                    description: Id of the product to be consulted..                
                    schema:
                        type: String
            responses:
                "200":
                    description: The product was obtained successfully.
                    content:
                        application/json:
                            schema:
                                type: Array
                                items:
                                    $ref: '#/components/schemas/Product'
                "401":
                    description: Unauthorized user.
                "500":
                    description: Iternal server error, the product could not be obtained.
        put:
            summary: Update a product by ID
            tags:
                - Products
            parameters:
                -   name: pid
                    in: path
                    required: true
                    description: Id of the product thet you want to get.
                    schema:
                        type: String
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#components/requestBodies/addProduct'
            responses: 
                "200":
                    description: The product was successfully updated.
                "401":
                    description: Unauthorized user.
                "500":
                    description: There was an error, the product could not be updated.
    
        delete:
            summary: Delete product.
            tags:
                - Products
            parameters:
                -   name: pid
                    in: path
                    required: true
                    description: ID of the product that you want to delete.
                    schema:
                        $type: String
            responses:
                "200":
                    description: The product was successfully deleted.
                "401":
                    description: Unauthorized user.
                "500":
                    description: the product could not be deleted.
components: 
  schemas: 
    Product:
      type: object
      properties: 
        _id:
          type: String
          description: Product id auto-generated by Mongo.
        title:
          type: String
          description: Product title.
        description:
          type: String
          description: Product descripion.
        price:
          type: Number
          description: Product price.
        thumbnail:
          type: String
          description: Names of the product images.
        code:
          type: String
          description: Product code, .
        stock:
          type: Number
          description: Stock product.
        category:
          type: String
          description: product category.
        status:
          type: Boolean
          description: Product status.
        owner:
          type: String
          description: ObjectId of the product creator user.
      example: 
        _id: ObjectId("dawjkldsa.23ndasljid21da")
        title: T-shirt
        description: White cotton t-shirt
        price: 70
        thumbnail: man-t-shirt.png
        code: M006
        stock: 50
        category: man
        status: true
        owner: admin
        
  requestBodies:
    addProduct:
      type: object
      properties:
        title:
          type: string
          description: Product title.
        description:
          type: string
          description: Product description.
        code:
          type: Number
          description: The product code, this field is unique and cannot be repeated.
        price:
          type: Number
          description: Product price
        status:
          type: string
          description: Determine the status of the product
        stock:
          type: Number
          description: Product stock available 
        category:
          type: string
          description: category to which the product belongs.
        thumbnail:
          type: string
          description: Image product link.
      example: 
        title: Producto
        description: description of the product.
        code:  M006
        price: 50
        status: 'true'
        stock: 35
        category: man
        thumbnail: example link